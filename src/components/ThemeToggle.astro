---
---

<button
  id="themeToggle"
  class="theme-toggle"
  title="Cambiar tema"
  aria-label="Cambiar tema"
>
  <div class="theme-toggle-icons">
    <!-- Icono de Sol (Modo Claro) -->
    <svg xmlns="http://www.w3.org/2000/svg" class="sun-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path>
      <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"></path>
    </svg>
    
    <!-- Icono de Luna (Modo Oscuro) -->
    <svg xmlns="http://www.w3.org/2000/svg" class="moon-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"></path>
    </svg>
    
    <!-- Icono de Sistema (Modo Automático) -->
    <svg xmlns="http://www.w3.org/2000/svg" class="system-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"></path>
      <path d="M7 20h10"></path>
      <path d="M9 16v4"></path>
      <path d="M15 16v4"></path>
    </svg>
  </div>
  <span class="theme-label"></span>
</button>

<style>
  .theme-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 9999px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .theme-toggle:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
  }

  .theme-toggle-icons {
    position: relative;
    width: 24px;
    height: 24px;
  }

  .sun-icon,
  .moon-icon,
  .system-icon {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transform: scale(0.5);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .theme-toggle[data-theme="light"] .sun-icon,
  .theme-toggle[data-theme="dark"] .moon-icon,
  .theme-toggle[data-theme="system"] .system-icon {
    opacity: 1;
    transform: scale(1);
  }

  .theme-label {
    font-size: 0.875rem;
    font-weight: 500;
    transition: opacity 0.3s ease;
    opacity: 0;
    position: absolute;
    right: 0.75rem;
    pointer-events: none;
  }

  .theme-toggle:hover .theme-label {
    opacity: 1;
  }

  /* Colores específicos para cada tema */
  .theme-toggle[data-theme="light"] {
    color: #f59e0b;
  }

  .theme-toggle[data-theme="dark"] {
    color: #60a5fa;
  }

  .theme-toggle[data-theme="system"] {
    color: #a78bfa;
  }

  /* Animación de rotación al cambiar */
  .theme-toggle.animating .theme-toggle-icons {
    animation: rotate 0.5s ease;
  }

  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  /* Estilos responsivos */
  @media (min-width: 768px) {
    .theme-toggle {
      padding: 0.5rem 0.75rem;
    }
    
    .theme-label {
      position: static;
      opacity: 1;
      margin-left: 0.25rem;
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const themeToggle = document.getElementById('themeToggle');
    if (!themeToggle) return;

    // Función para actualizar el texto de la etiqueta
    function updateLabel(theme) {
      const label = themeToggle.querySelector('.theme-label');
      if (label) {
        switch (theme) {
          case 'light':
            label.textContent = 'Claro';
            break;
          case 'dark':
            label.textContent = 'Oscuro';
            break;
          case 'system':
            label.textContent = 'Sistema';
            break;
        }
      }
    }

    // Función para aplicar el tema
    function applyTheme(theme) {
      document.documentElement.classList.remove('light', 'dark');
      
      // Aplicar el tema seleccionado
      if (theme === 'light') {
        document.documentElement.classList.add('light');
      } else if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else if (theme === 'system') {
        // Comprobar preferencia del sistema
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.add('light');
        }
      }
      
      // Actualizar atributo de datos y localStorage
      themeToggle.setAttribute('data-theme', theme);
      localStorage.setItem('theme', theme);
      
      // Actualizar la etiqueta
      updateLabel(theme);
    }

    // Ciclo de temas: light -> dark -> system -> light
    function cycleTheme() {
      const currentTheme = localStorage.getItem('theme') || 'system';
      
      // Añadir clase para animación
      themeToggle.classList.add('animating');
      
      // Ciclo de temas
      let newTheme;
      switch (currentTheme) {
        case 'light':
          newTheme = 'dark';
          break;
        case 'dark':
          newTheme = 'system';
          break;
        default:
          newTheme = 'light';
      }
      
      // Aplicar nuevo tema
      applyTheme(newTheme);
      
      // Quitar clase de animación después de completarse
      setTimeout(() => {
        themeToggle.classList.remove('animating');
      }, 500);
    }

    // Inicializar tema
    const savedTheme = localStorage.getItem('theme') || 'system';
    applyTheme(savedTheme);
    
    // Escuchar cambios en la preferencia del sistema si está en modo "system"
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      if (localStorage.getItem('theme') === 'system') {
        applyTheme('system');
      }
    });

    // Evento de clic para cambiar el tema
    themeToggle.addEventListener('click', cycleTheme);
  });
</script>
