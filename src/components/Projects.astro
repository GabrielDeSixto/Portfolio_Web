---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import { getLangFromUrl, useTranslations } from "@/i18n/utils"
type tLang = (str: any) => any;
const lang = getLangFromUrl(Astro.url)
const t:tLang = useTranslations(lang);
type TagType = {
  name: string;
  class: string;
  icon: (_props: Record<string, any>) => any;
};
type TagsType = {
  [key: string]: TagType;
};
const TAGS: TagsType = {
  nextjs: {
    name: 'Next.js',
    class: 'bg-[#000] text-white dark:bg-white dark:text-[#000]',
    icon: NextJS,
  },
  tailwindcss: {
    name: 'Tailwind CSS',
    class: 'bg-[#06b6d4] text-white',
    icon: Tailwind,
  },
};
interface ProjectType {
  image: string;
  imageAlt: string;
  title: string;
  description: string;
  tags: string[];
  link?: string;
  github?: string;
}
const PROJECTS:ProjectType[] = t('projects');
---

<div class="projects-container">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }, index) => (
      <article class={`project-card ${index % 2 === 1 ? 'project-card-reverse' : ''}`}>
        <div class="project-image-container">
          <div class="project-image-wrapper">
            <img 
              alt={title} 
              class="project-image" 
              loading="lazy" 
              src={image} 
            />
            <div class="project-image-overlay"></div>
          </div>
        </div>
        
        <div class="project-content">
          <h3 class="project-title">
            {title}
          </h3>
          
          <ul class="project-tags">
            {tags.map((item) => {
              const tag:TagType = TAGS[item];
              if(tag) {
                return (
                  <li>
                    <span class={`project-tag ${tag.class}`}>
                      <tag.icon class="tag-icon" />{tag.name}
                    </span>
                  </li>
                )
              }
            })}
          </ul>

          <p class="project-description">{description}</p>
          
          <footer class="project-links">
            {github && (
              <LinkButton href={github} class="project-button github-button">
                <GitHub class="button-icon" />
                <span>CÃ³digo</span>
              </LinkButton>
            )}
            {link && (
              <LinkButton href={link} class="project-button demo-button">
                <Link class="button-icon" />
                <span>Demo</span>
              </LinkButton>
            )}
          </footer>
        </div>
      </article>
    ))
  }
</div>

<style>
  .projects-container {
    display: flex;
    flex-direction: column;
    gap: 6rem;
    margin: 2rem 0;
  }

  .project-card {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    position: relative;
    border-radius: 1rem;
    overflow: hidden;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .project-card:hover {
    transform: translateY(-5px);
  }

  .project-image-container {
    width: 100%;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .project-image-wrapper {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    overflow: hidden;
    border-radius: 1rem;
  }

  .project-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.8s ease;
  }

  .project-image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,0.3) 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .project-card:hover .project-image {
    transform: scale(1.05);
  }

  .project-card:hover .project-image-overlay {
    opacity: 1;
  }

  .project-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.03);
    backdrop-filter: blur(10px);
    border-radius: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .project-title {
    font-size: 1.75rem;
    font-weight: 700;
    background: linear-gradient(90deg, #3b82f6, #2563eb);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
    margin: 0;
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .project-tag {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.4rem 0.8rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }

  .tag-icon {
    width: 1rem;
    height: 1rem;
  }

  .project-description {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--color-text);
    margin: 0.5rem 0;
  }

  .project-links {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
    flex-wrap: wrap;
  }

  .project-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.6rem 1.2rem;
    border-radius: 0.5rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .github-button {
    background-color: #24292e;
    color: white;
  }

  .github-button:hover {
    background-color: #1b1f23;
    transform: translateY(-2px);
  }

  .demo-button {
    background: linear-gradient(135deg, #4f46e5, #7c3aed);
    color: white;
  }

  .demo-button:hover {
    background: linear-gradient(135deg, #4338ca, #6d28d9);
    transform: translateY(-2px);
  }

  .button-icon {
    width: 1.25rem;
    height: 1.25rem;
  }

  /* Variables para modo claro/oscuro */
  :root {
    --color-text: #4b5563;
  }

  :global(.dark) {
    --color-text: #d1d5db;
  }

  /* Media queries para responsividad */
  @media (min-width: 768px) {
    .project-card {
      flex-direction: row;
      align-items: center;
    }

    .project-card-reverse {
      flex-direction: row-reverse;
    }

    .project-image-container {
      width: 55%;
    }

    .project-content {
      width: 45%;
      padding: 2rem;
    }
  }

  @media (max-width: 767px) {
    .projects-container {
      gap: 4rem;
    }

    .project-title {
      font-size: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .project-links {
      flex-direction: column;
      width: 100%;
    }

    .project-button {
      width: 100%;
      justify-content: center;
    }
  }
</style>
